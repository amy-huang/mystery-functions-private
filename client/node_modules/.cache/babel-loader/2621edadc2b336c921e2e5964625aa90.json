{"ast":null,"code":"import _slicedToArray from \"/home/amy/mystery-function/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/amy/mystery-function/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/amy/mystery-function/src/components/Tabs.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport IsPalindrome from '../functions/IsPalindrome';\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return React.createElement(Typography, Object.assign({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"simple-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"simple-tab-\".concat(index)\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Box, {\n    p: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: \"simple-tab-\".concat(index),\n    'aria-controls': \"simple-tabpanel-\".concat(index)\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n});\n\nfunction newKey() {\n  if (typeof newKey.key == 'undefined') {\n    newKey.key = 0;\n  } else {\n    newKey.key += 1;\n  }\n\n  return newKey.key;\n}\n\nvar evalInputStr = \"\";\nvar evalInputReason = \"\";\nvar evalPairInput = \"\";\nvar evalPairOutput = \"\";\nvar evalPairReason = \"\";\nvar finalGuess = \"\";\nexport default function SimpleTabs(props) {\n  var classes = useStyles(); // For switching tabs\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  function asIntEvaluator(item) {\n    if (Number.isInteger(item)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function evalInput() {\n    if (!IsPalindrome.validListInput(evalInputStr, asIntEvaluator)) {\n      alert(\"'\" + evalInputStr + \"' is not a valid input to this function\");\n      return;\n    }\n\n    if (evalInputReason === \"\") {\n      alert(\"Please submit a reason that you evaluated this input: \" + evalInputStr);\n      return;\n    }\n\n    var guess = {};\n    guess.key = newKey();\n    guess.type = \"eval_input\";\n    guess.in = IsPalindrome.parseInput(evalInputStr);\n    guess.out = IsPalindrome.function(IsPalindrome.parseInput(evalInputStr));\n    guess.reason = evalInputReason.trim();\n    props.children.guesses.push(guess);\n    props.children.updateFunc();\n  }\n\n  function evalInputOutputPair() {\n    if (!IsPalindrome.validListInput(evalPairInput, asIntEvaluator)) {\n      alert(\"'\" + evalPairInput + \"' is not a valid input to this function\");\n      return;\n    }\n\n    if (!IsPalindrome.validOutput(evalPairOutput)) {\n      alert(\"'\" + evalPairOutput + \"' is not a valid output of this function\");\n      return;\n    }\n\n    if (evalPairReason === \"\") {\n      alert(\"Please submit a reason that you evaluated this input: \" + evalInputOutputPair);\n      return;\n    }\n\n    var guess = {};\n    guess.key = newKey();\n    guess.type = \"eval_guess\";\n    guess.in = IsPalindrome.parseInput(evalPairInput);\n    guess.out = IsPalindrome.parseOutput(evalPairOutput);\n\n    if (IsPalindrome.function(IsPalindrome.parseInput(evalPairInput)) === guess.out) {\n      guess.result = \"YES\";\n    } else {\n      guess.result = \"NO\";\n    }\n\n    guess.reason = evalPairReason.trim();\n    props.children.guesses.push(guess);\n    props.children.updateFunc();\n  }\n\n  var guessField;\n\n  function showAnswer() {\n    alert(guessField.placeHolder = IsPalindrome.answerText()); // TODO: redirect to next page\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"simple tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Tab, Object.assign({\n    label: \"Input\"\n  }, a11yProps(0), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(Tab, Object.assign({\n    label: \"Input/Output pair\"\n  }, a11yProps(1), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(Tab, Object.assign({\n    label: \"Final Guess\"\n  }, a11yProps(2), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })))), React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 4,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Input\",\n    onChange: function onChange(e) {\n      evalInputStr = e.target.value;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    multiline: true,\n    rows: 1,\n    fullWidth: true,\n    variant: \"outlined\",\n    placeholder: \"Why this input?\",\n    onChange: function onChange(e) {\n      evalInputReason = e.target.value;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    className: classes.actionButton,\n    onClick: evalInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Submit\"))))), React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Input\",\n    onChange: function onChange(e) {\n      evalPairInput = e.target.value;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Output\",\n    onChange: function onChange(e) {\n      evalPairOutput = e.target.value;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 4,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    multiline: true,\n    rows: 1,\n    fullWidth: true,\n    variant: \"outlined\",\n    placeholder: \"Why this guess?\",\n    onChange: function onChange(e) {\n      evalPairReason = e.target.value;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    className: classes.actionButton,\n    onClick: evalInputOutputPair,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Submit\")))))), React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 7,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    multiline: true,\n    rows: 4,\n    fullWidth: true,\n    variant: \"outlined\",\n    placeholder: \"What do you think this function does?\",\n    onChange: function onChange(e) {\n      finalGuess = e.target.value;\n    },\n    ref: function ref(elem) {\n      guessField = elem;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    className: classes.actionButton,\n    onClick: showAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Submit final guess\"))))));\n}","map":{"version":3,"sources":["/home/amy/mystery-function/src/components/Tabs.js"],"names":["React","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","TextField","Button","Grid","IsPalindrome","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","newKey","key","evalInputStr","evalInputReason","evalPairInput","evalPairOutput","evalPairReason","finalGuess","SimpleTabs","classes","useState","setValue","handleChange","event","newValue","asIntEvaluator","item","Number","isInteger","evalInput","validListInput","alert","guess","type","in","parseInput","out","function","reason","trim","guesses","push","updateFunc","evalInputOutputPair","validOutput","parseOutput","result","guessField","showAnswer","placeHolder","answerText","e","target","actionButton","elem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport IsPalindrome from '../functions/IsPalindrome';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction newKey() {\n  if (typeof newKey.key == 'undefined') {\n    newKey.key = 0;\n  } else {\n    newKey.key += 1;\n  }\n  return newKey.key;\n}\n\nvar evalInputStr = \"\";\nvar evalInputReason = \"\";\nvar evalPairInput = \"\";\nvar evalPairOutput = \"\";\nvar evalPairReason = \"\";\nvar finalGuess = \"\";\n\nexport default function SimpleTabs(props) {\n  const classes = useStyles();\n\n  // For switching tabs\n  const [value, setValue] = React.useState(0);\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  function asIntEvaluator(item) {\n    if (Number.isInteger(item)) {\n      return true;\n    }\n    return false;\n  }\n\n  function evalInput() {\n    if (!IsPalindrome.validListInput(evalInputStr, asIntEvaluator)) {\n      alert(\"'\" + evalInputStr + \"' is not a valid input to this function\");\n      return;\n    }\n    if (evalInputReason === \"\") {\n      alert(\"Please submit a reason that you evaluated this input: \" + evalInputStr);\n      return;\n    }\n\n    var guess = {};\n    guess.key = newKey();\n    guess.type = \"eval_input\";\n    guess.in = IsPalindrome.parseInput(evalInputStr);\n    guess.out = IsPalindrome.function(IsPalindrome.parseInput(evalInputStr));\n    guess.reason = evalInputReason.trim();\n    props.children.guesses.push(guess);\n    props.children.updateFunc();\n  }\n\n  function evalInputOutputPair() {\n    if (!IsPalindrome.validListInput(evalPairInput, asIntEvaluator)) {\n      alert(\"'\" + evalPairInput + \"' is not a valid input to this function\");\n      return;\n    }\n    if (!IsPalindrome.validOutput(evalPairOutput)) {\n      alert(\"'\" + evalPairOutput + \"' is not a valid output of this function\");\n      return;\n    }\n    if (evalPairReason === \"\") {\n      alert(\"Please submit a reason that you evaluated this input: \" + evalInputOutputPair);\n      return;\n    }\n\n    var guess = {};\n    guess.key = newKey();\n    guess.type = \"eval_guess\";\n    guess.in = IsPalindrome.parseInput(evalPairInput);\n    guess.out = IsPalindrome.parseOutput(evalPairOutput);\n    if (IsPalindrome.function(IsPalindrome.parseInput(evalPairInput)) === guess.out) {\n      guess.result = \"YES\";\n    } else {\n      guess.result = \"NO\";\n    }\n    guess.reason = evalPairReason.trim();\n    props.children.guesses.push(guess);\n    props.children.updateFunc();\n  }\n\n  var guessField;\n  function showAnswer() {\n    alert(guessField.placeHolder = IsPalindrome.answerText());\n    // TODO: redirect to next page\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Input\" {...a11yProps(0)} />\n          <Tab label=\"Input/Output pair\" {...a11yProps(1)} />\n          <Tab label=\"Final Guess\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Grid container spacing={4}>\n          <Grid container item spacing={4} direction=\"column\">\n            <Grid item>\n              <TextField label=\"Input\" onChange={(e) => { evalInputStr = e.target.value; }}>\n              </TextField>\n            </Grid>\n            <Grid item >\n              <TextField multiline={true} rows={1} fullWidth={true} variant=\"outlined\" placeholder=\"Why this input?\" onChange={(e) => { evalInputReason = e.target.value; }}>\n              </TextField>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <div>\n              <Button type=\"submit\" color='primary' variant=\"contained\" className={classes.actionButton} onClick={evalInput}>\n                Submit\n              </Button>\n            </div>\n          </Grid>\n        </Grid>\n      </TabPanel>\n\n      <TabPanel value={value} index={1}>\n        <Grid container spacing={4}>\n          <Grid container item spacing={4}>\n            <Grid item>\n              <TextField label=\"Input\" onChange={(e) => { evalPairInput = e.target.value; }}>\n              </TextField>\n            </Grid>\n            <Grid item>\n              <TextField label=\"Output\" onChange={(e) => { evalPairOutput = e.target.value; }}>\n              </TextField>\n            </Grid>\n          </Grid>\n\n          <Grid container item spacing={4} direction=\"column\">\n            <Grid item>\n              <TextField multiline={true} rows={1} fullWidth={true} variant=\"outlined\" placeholder=\"Why this guess?\" onChange={(e) => { evalPairReason = e.target.value; }}>\n              </TextField>\n            </Grid>\n            <Grid item>\n              <div>\n                <Button color='primary' variant=\"contained\" className={classes.actionButton} onClick={evalInputOutputPair}>\n                  Submit\n                </Button>\n              </div>\n            </Grid>\n          </Grid>\n        </Grid>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Grid container spacing={7} direction=\"column\">\n          <Grid item>\n            <TextField multiline={true} rows={4} fullWidth={true} variant=\"outlined\" placeholder=\"What do you think this function does?\" onChange={(e) => { finalGuess = e.target.value; }} ref={(elem) => { guessField = elem; }}>\n            </TextField>\n          </Grid>\n          <Grid item>\n            <div>\n              <Button color='primary' variant=\"contained\" className={classes.actionButton} onClick={showAnswer}>\n                Submit final guess\n                </Button>\n            </div>\n          </Grid>\n        </Grid>\n      </TabPanel>\n    </div >\n  );\n}\n"]},"metadata":{},"sourceType":"module"}